# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2

jobs:
  linting:
    docker:
      # Use the same Docker base as the project
      - image: python:3.7.3-stretch

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "blue/requirements.txt" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run:
          name: install dependencies for blue deployment
          command: |
            python3 -m venv venv
            . venv/bin/activate
            cd blue
            make install
            # Install hadolint
            wget -O /bin/hadolint https://github.com/hadolint/hadolint/releases/download/v1.16.3/hadolint-Linux-x86_64 &&\
            chmod +x /bin/hadolint
            
      # run lint!
      - run:
          name: run lint for blue deployment
          command: |
            . venv/bin/activate
            cd blue
            make lint 
            
      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "blue/requirements.txt" }}

      
            
  build-and-push-docker:
    docker:
      - image: circleci/python:3.7.3-stretch

    working_directory: ~/repo

    steps:
      - checkout
     
      # ... steps for building/testing app ...
      - setup_remote_docker:
          version: 20.10.14
          
      - run:
          name: build docker image for blue deployment
          command: |
            python3 -m venv venv
            . venv/bin/activate
            cd blue
            make install
            docker build --tag=blue_capstone_api .
      
      - run:
          name: upload docker image for blue deployment to cloudhub
          command: |
            . venv/bin/activate
            cd blue
            docker login -u="$DOCKERHUB_USERNAME" -p="$DOCKERHUB_PASSWORD"
            docker tag blue_capstone_api:latest panosdoxos/blue_capstone_api:latest
            docker push panosdoxos/blue_capstone_api:latest
            
  create-cluster:
    executor: aws-eks/python3
    parameters:
      cluster-name:
        description: |
          Name of the EKS cluster
        type: string
    steps:
      - checkout
      - aws-eks/install-aws-iam-authenticator:
          release-tag: ''
      - aws-eks/create-cluster:
          cluster-name: << parameters.cluster-name >>
          skip-kubectl-install: false
          verbose: 3
          node-type: t3.small
          nodes-max: 2
          ssh-access: false
          ssh-public-key: ''
          
orbs:
  aws-eks: circleci/aws-eks@1.1.0
  kubernetes: circleci/kubernetes@0.4.0
  
workflows:
  version: 2
  build_and_test:
    jobs:
      - linting
      - build-and-push-docker:
          requires:
            - linting
      - create-cluster:
          requires:
            build-and-push-docker
    